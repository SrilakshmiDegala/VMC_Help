# Vectorized Sample Delay
  
![](./Images/block.png)  

## Library

AI Engine/DSP/Buffer IO

## Description

The delay block produces an output signal by delaying the input signal by the number of samples specified in the block dialog box. If the latency of the block is N, then the N-1 first output samples are always 0, and the N-th output sample is the first input sample.

## Parameters

### Main  
#### Input/Output data type  
Set the input/output data type.


#### Input Window Size(Number of Samples)  
Describes the number of samples used as an input to the FFT. This parameter must be in the range of 2^0 and 2^32-1, inclusive.

#### Maximum Sample Delay  
Describes the maximum number of samples used to delay the input signal.This parameter must be in the range of 2^0 and 2^32-1, inclusive.  

#### Rounding mode

Describes the selection of rounding to be applied during the shift down stage of processing.

The following modes are available:
* **Floor:** Truncate LSB, always round down (towards negative infinity).
* **Ceiling:** Always round up (towards positive infinity).
* **Round to positive infinity:** Round halfway towards positive infinity.
* **Round to negative infinity:** Round halfway towards negative infinity.
* **Round symmetrical to infinity:** Round halfway towards infinity (away from zero).
* **Round symmetrical to zero:** Round halfway towards zero (away from infinity).
* **Round convergent to even:** Round halfway towards nearest even number.
* **Round convergent to odd:** Round halfway towards nearest odd number.

No rounding is performed on the **Floor** or **Ceiling** modes. Other modes round to the nearest integer. They differ only in how they round for values that are exactly between two integers.

#### Saturation mode

Describes the selection of saturation to be applied during the shift down stage of processing.

The following modes are available:
* **None:** No saturation is performed and the value is truncated on the MSB side.
* **Asymmetric:** Rounds an n-bit signed value in the range `-2^(n-1)` to `2^(n-1)-1`.
* **Symmetric:** Rounds an n-bit signed value in the range `-2^(n-1)-1` to `2^(n-1)-1`.

#### Number of cascade stages  
This determines the number of kernels the FFT will be divided over in
series to improve throughput.

### Constraints
Click on the button given here to access the constraint manager and add or update constraints for each kernel. If you set the "Number of cascade stages" parameter to a value greater than one, multiple kernels will be used to process the input. You can use the constraint manager to optimize the performance of your design by setting specific constraints for each kernel (in this case, you need to first run your design). Adding constraints will not affect the functional simulation in Simulink. Constraints will only affect the generated graph code, cycle approximate AIE simulation (System C), and behavior in hardware.

<div class="noteBox">
If you are using non-default constraints for any of the kernels for the block, an asterisk (*) will be displayed next to the button.
</div>

# FFT Block Examples 
This example compares AI Engine FFT block in Vitis Model Composer with the Simulink FFT block.

**Example with 1024 point FFT:**

![](./Images/FFT_Example1.png) 

**Complex_Signal_6KHz Subsystem blocks:**

![](./Images/Complex_Signal_6KHz.png) 

**Error_Computation Subsystem blocks:**

![](./Images/Error_Computation.png) 

**Comparison of AIE FFT and Simulink FFT Spectrum:**

![](./Images/SpectrumComparison.png)

**Difference between AIE FFT and Simulink FFT block outputs:**

![](./Images/Error.png)


**Example with 512 point FFT:**

![](./Images/FFT_Example2.png) 

**Comparison of AIE FFT and Simulink FFT Spectrum:**

![](./Images/SpectrumComparison_Ex2.png)


## Examples
For an example using the FFT block where the output is compared with the DSP System Toolbox FFT block click [here](https://github.com/Xilinx/Vitis_Model_Composer/tree/HEAD/Examples/AIENGINE/DSPlib/fft).

## References
This block uses the Vitis DSP library implementation of FFT. For more details on this implementation please click [here](https://docs.xilinx.com/r/en-US/Vitis_Libraries/dsp/user_guide/L2/func-fft.html).


